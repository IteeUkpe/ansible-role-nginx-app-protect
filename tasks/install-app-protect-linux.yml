---
- name: Check that the NGINX App Protect install zip exists locally
  stat:
    path: "{{ install_zip}}"
  register: local_install_zip_stat
  connection: local

- name: Check preconditions
  assert:
    that:
      - "local_install_zip_stat.stat.exists == true"
    quiet: true

- name: Copy NGINX App Protect install zip to host
  copy:
    src: "{{ install_zip }}"
    dest: "{{ install_zip }}"

- name: Get package facts
  package_facts:
    manager: "auto"

- name: Set zip version number
  set_fact:
    key_value: "" # appeasing the linter
    app_protect_version: "{{ install_zip | regex_search('(\\d+)') }}"

- name: Set NGINX Plus version
  set_fact:
    key_value: "" # appeasing the linter
    nginx_plus_version: "{{ ansible_facts.packages['nginx-plus'] | map(attribute='version') | list | first | regex_search('^(\\d{1,3})') }}"
  when: "'nginx-plus' in ansible_facts.packages"

- name: Fail if NGINX+ version preconditions fail
  assert:
    that:
      - nginx_plus_version is defined
      - nginx_plus_version | int >= 18
    fail_msg: "'nginx_plus_version' release version must be a minimum of 18 for App Protect. Actual: {{ nginx_plus_version }}"
    success_msg: "'nginx_plus_version' is {{ nginx_plus_version }}"
    quiet: true

- name: Fail if app protect zip doesn't not match detected NGINX+ version
  assert:
    that:
      - app_protect_version is defined
      - nginx_plus_version | int == app_protect_version | int
    fail_msg: "'nginx_plus_version' {{ nginx_plus_version }} must match the NGINX App Protect version {{ app_protect_version }}"
    success_msg: "'nginx_plus_version' is {{ nginx_plus_version }} and 'app_protect_version' is {{ app_protect_version }}"
    quiet: true

- name: Install epel-release, unzip and openssl packages
  package:
    name: epel-release, unzip, openssl
    state: present

- name: Create a directory if it does not exist
  file:
    path: "{{ tmp_dir }}"
    state: directory

- name: Unarchive the App Protect package file that is already on the remote machine
  unarchive:
    src: "{{ install_zip }}"
    dest: "{{ tmp_dir }}"
    remote_src: yes

- name: Display paths of all .rpm files in dir; exclude NGINX+ installer
  find:
    paths: 
      - "{{ tmp_dir }}"
    file_type: file
    use_regex: true
    patterns:
      - "^(?!.*nginx-plus-{{ app_protect_version }}).*\\.rpm$"
  register: rpm_files

- name: Install f5 packages
  package:
    name: "{{ rpm_files | select('match', '^f5.*.rpm$') | list }}"
    state: present

- name: Install app-protect dependency packages
  package:
    name: "{{ rpm_files | select('match', '^app-protect-[^\\d].*\\.rpm$') | list }}"
    state: present

- name: Install app-protect NGINX+ module package
  package:
    name: "{{ rpm_files | select('match', '^nginx-plus-module-appprotect-.*\\.rpm$') | list }}"
    state: present

- name: Install app-protect core package
  package:
    name: "{{ rpm_files | select('match', '^app-protect-\\d{2,3}.*\\.rpm$') | list }}"
    state: present

- name: Disable SELinux
  selinux:
    state: disabled

- name: Recursively remove extracted directory
  file:
    path: "{{ tmp_dir }}"
    state: absent
  when: cleanup_when_done

- name: Remove source zip
  file:
    path: "{{ install_zip }}"
    state: absent
  when: cleanup_when_done
