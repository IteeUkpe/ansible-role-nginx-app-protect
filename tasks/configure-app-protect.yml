---
- name: "Ensure NGINX Main Directory Exists"
  file:
    path: "{{ nginx_conf_template.out_file_location }}"
    state: directory
  when: app_protect_security_policy_template_enable or app_protect_log_policy_template_enable or nginx_conf_template_enable

- name: Backup existing nginx.conf
  copy:
    src: "{{ nginx_conf_template.out_file_location }}{{ nginx_conf_template.out_file_name }}"
    dest: "{{ nginx_conf_template.out_file_location }}{{ nginx_conf_template.out_file_name }}.orig"
    remote_src: true
  when: nginx_conf_template_enable
  changed_when: false

- name: "Dynamically Generate NGINX App Protect security policy file"
  template:
    src: "{{ app_protect_security_policy_template.template_file }}"
    dest: "{{ app_protect_security_policy_template.out_file_location }}{{ app_protect_security_policy_template.out_file_name }}"
    mode: "0644"
    backup: true
  when: app_protect_security_policy_template_enable

- name: "Dynamically Generate NGINX App Protect log policy file"
  template:
    src: "{{ app_protect_log_policy_template.template_file }}"
    dest: "{{ app_protect_log_policy_template.out_file_location }}{{ app_protect_log_policy_template.out_file_name }}"
    mode: '0644'
    backup: true
  when: app_protect_log_policy_template_enable

- name: "Dynamically Generate NGINX conf file"
  template:
    src: "{{ nginx_conf_template.template_file }}"
    dest: "{{ nginx_conf_template.out_file_location }}{{ nginx_conf_template.out_file_name }}"
    backup: true
  when:
    - nginx_conf_template_enable
    - app_protect_state != "absent"

- name: "Remove NGINX App Protect"
  block:

    - name: Comment out NGINX App Protect module reference in nginx.conf
      replace:
        path: /etc/nginx/nginx.conf
        regexp: '^([ \t]*load_module.*ngx_http_app_protect_module.so;)'
        replace: '# \1'

    - name: Comment out NGINX App Protect directives in nginx.conf
      replace:
        path: /etc/nginx/nginx.conf
        regexp: '^([ \t]*app_protect_)'
        replace: '# \1'

  when: app_protect_state == "absent"

- name: "Reload NGINX"
  debug:
    msg: "trigger nginx reload if needed"
  notify: "(Handler: All OSs) Restart NGINX"
  when: app_protect_security_policy_template_enable or app_protect_log_policy_template_enable or nginx_conf_template_enable
