---
- name: "(Install: SELinux) Install Required CentOS Dependencies"
  package:
    name: policycoreutils-python, setools
    state: present

- name: "(Install: SELinux) Permissive SELinux"
  selinux:
    state: permissive
    policy: targeted
  when: app_protect_selinux
  changed_when: false

- name: "(Install: SELinux: Booleans) Allow HTTP network connection"
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: "(Install: SELinux: Booleans) Allow HTTP relay connection"
  seboolean:
    name: httpd_can_network_relay
    state: yes
    persistent: yes

- name: "(Install: SELinux: Booleans) Allow HTTP mod auth pam"
  seboolean:
    name: httpd_mod_auth_pam
    state: yes
    persistent: yes

- name: "(Install: SELinux: Booleans) enable NIS"
  seboolean:
    name: nis_enabled
    state: yes
    persistent: yes

- name: "(Install: SELinux: Contexts) App Protect Logs"
  sefcontext:
    target: '/var/log/app_protect(/.*)?'
    setype: httpd_log_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect Opt"
  sefcontext:
    target: '/opt/app_protect(/.*)?'
    setype: httpd_var_run_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect Pipe"
  sefcontext:
    target: '/opt/app_protect/pipe(/.*)?'
    setype: httpd_initrc_exec_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect Config"
  sefcontext:
    target: '/opt/app_protect/config(/.*)?'
    setype: httpd_config_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect bin"
  sefcontext:
    target: '/opt/app_protect/bin(/.*)?'
    setype: httpd_exec_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect lock"
  sefcontext:
    target: '/opt/app_protect/lock(/.*)?'
    setype: httpd_lock_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect Temp"
  sefcontext:
    target: '/opt/app_protect/temp(/.*)?'
    setype: httpd_tmp_t
    state: present

- name: "(Install: SELinux: Contexts) App Protect Tmp"
  sefcontext:
    target: '/opt/app_protect/tmp(/.*)?'
    setype: httpd_tmp_t
    state: present

- name: "(Install: SELinux: Contexts) Apply contexts to opt"
  command: restorecon -iRv /opt/app_protect
  changed_when: false

- name: "(Install: SELinux: Contexts) Apply contexts to log"
  command: restorecon -iRv /var/log/app_protect
  changed_when: false

- name: "(Install: SELinux: Module) Create NGINX Plus App Protect Module"
  template:
    src: nginx-plus-module-appprotect.te.j2
    dest: /tmp/nginx-plus-module-appprotect.te

- name: "(Install: SELinux: Module) Check NGINX Plus App Protect Module"
  command: checkmodule -M -m -o /tmp/nginx-plus-module-appprotect.mod /tmp/nginx-plus-module-appprotect.te
  args:
    creates: /tmp/nginx-plus-module-appprotect.mod
  changed_when: false

- name: "(Install: SELinux: Module) Compile NGINX Plus App Protect Module"
  command: semodule_package -o /tmp/nginx-plus-module-appprotect.pp -m /tmp/nginx-plus-module-appprotect.mod
  args:
    creates: /tmp/nginx-plus-module-appprotect.pp
  changed_when: false

- name: "(Install: SELinux: Module) Import NGINX Plus App Protect Module"
  command: semodule -i /tmp/nginx-plus-module-appprotect.pp
  changed_when: false

- name: "(Install: SELinux: Module) Create NGINX Plus Metrics Module"
  template:
    src: nginx-plus-module-f5-metrics.te.j2
    dest: /tmp/nginx-plus-module-f5-metrics.te

- name: "(Install: SELinux: Module) Check NGINX Plus Metrics Module"
  command: checkmodule -M -m -o /tmp/nginx-plus-module-f5-metrics.mod /tmp/nginx-plus-module-f5-metrics.te
  args:
    creates: /tmp/nginx-plus-module-f5-metrics.mod
  changed_when: false

- name: "(Install: SELinux: Module) Compile NGINX Plus Metrics Module"
  command: semodule_package -o /tmp/nginx-plus-module-f5-metrics.pp -m /tmp/nginx-plus-module-f5-metrics.mod
  args:
    creates: /tmp/nginx-plus-module-f5-metrics.pp
  changed_when: false

- name: "(Install: SELinux: Module) Import NGINX Plus Metrics Module"
  command: semodule -i /tmp/nginx-plus-module-f5-metrics.pp
  changed_when: false

- name: "(Install: SELinux) Enforce SELinux"
  selinux:
    state: enforcing
    policy: targeted
  changed_when: false
